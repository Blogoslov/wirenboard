 Add --exit-after=N command-line option to exit after receiving first N messages
 .
 mosquitto (1.3.4-2) unstable; urgency=low
 .
   * Disable bad "fake ca" test.
Author: Roger A. Light <roger@atchoo.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- mosquitto-1.3.4.orig/client/sub_client.c
+++ mosquitto-1.3.4/client/sub_client.c
@@ -57,6 +57,7 @@ struct userdata {
 	bool quiet;
 	bool no_retain;
 	bool eol;
+    int remaining_messages;
 };
 
 void my_message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)
@@ -98,6 +99,13 @@ void my_message_callback(struct mosquitt
 			fflush(stdout);
 		}
 	}
+
+    if (ud->remaining_messages > 1) {
+        ud->remaining_messages -= 1;
+    } else if (ud->remaining_messages == 1) {
+        exit(0);
+    }
+
 }
 
 void my_connect_callback(struct mosquitto *mosq, void *obj, int result)
@@ -162,6 +170,7 @@ void print_usage(void)
 	printf("                      [--ciphers ciphers] [--insecure]]\n");
 #ifdef WITH_TLS_PSK
 	printf("                     [--psk hex-key --psk-identity identity [--ciphers ciphers]]\n");
+	printf("                     [--exit-after message_count]\n");
 #endif
 #endif
 	printf("       mosquitto_sub --help\n\n");
@@ -212,6 +221,8 @@ void print_usage(void)
 	printf(" --psk-identity : client identity string for TLS-PSK mode.\n");
 #endif
 #endif
+	printf(" --exit-after : exit after receiving the specified number of messages\n");
+
 	printf("\nSee http://mosquitto.org/ for more information.\n\n");
 }
 
@@ -232,7 +243,7 @@ int main(int argc, char *argv[])
 	char err[1024];
 	struct userdata ud;
 	int len;
-	
+
 	char *will_payload = NULL;
 	long will_payloadlen = 0;
 	int will_qos = 0;
@@ -255,6 +266,7 @@ int main(int argc, char *argv[])
 
 	memset(&ud, 0, sizeof(struct userdata));
 	ud.eol = true;
+    ud.remaining_messages = -1;
 
 	for(i=1; i<argc; i++){
 		if(!strcmp(argv[i], "-p") || !strcmp(argv[i], "--port")){
@@ -512,6 +524,19 @@ int main(int argc, char *argv[])
 				will_topic = argv[i+1];
 			}
 			i++;
+		}else if(!strcmp(argv[i], "--exit-after")){
+			if(i==argc-1){
+				fprintf(stderr, "Error: --exit-after argument given but no maximum number of messages specified.\n\n");
+				print_usage();
+				return 1;
+			}else{
+				ud.remaining_messages = atoi(argv[i+1]);
+				if(ud.remaining_messages <= 0){
+					fprintf(stderr, "Error: Invalid maximum number of messages %d.\n\n", ud.remaining_messages);
+					return 1;
+				}
+			}
+			i++;
 		}else{
 			fprintf(stderr, "Error: Unknown option '%s'.\n",argv[i]);
 			print_usage();
